library(devil)
setwd("~/Desktop/dottorato/rdevil_project/devil/")
rm(list = ls())
library(tidyverse)
library(devil)
library(nebula)
data = readRDS("../de_analysis/nullpower/test_data/pb.TRUE.bca.n.10.ct.1.fc.0.5.csv")
metadata <- data$meta
input_matrix <- Y <- data$count %>% as.matrix()
design_matrix = model.matrix(~ tx_cell, data = metadata)
use_size_factors <- FALSE
glm.fit <- glmGamPoi::glm_gp(Y, design = design_matrix, size_factors = use_size_factors, overdispersion = T, verbose = T)
devil.fit <- devil::fit_devil(Y, design_matrix, size_factors = use_size_factors, overdispersion = T, verbose = T)
plot(rowSums(devil.fit$beta), devil.fit$iterations)
cor.test(glm.fit$Beta, devil.fit$beta)
cor.test(devil.fit$overdispersion, glm.fit$overdispersions)
# De analysis ####
glm.res <- glmGamPoi::test_de(glm.fit, contrast = contrast)
devil.res <- devil::test_de(devil.fit, contrast = contrast, clusters = metadata$id)
contrast <- c(0, 1)
# De analysis ####
glm.res <- glmGamPoi::test_de(glm.fit, contrast = contrast)
devil.res <- devil::test_de(devil.fit, contrast = contrast, clusters = metadata$id)
de_genes <- 1:25
not_de_genes <- 25:500
xs <- seq(0, 1, length = length(not_de_genes))
plot(xs, sort(glm.res$pval[not_de_genes]))
plot(xs, sort(devil.res$pval[not_de_genes]))
# install.packages("devtools")
devtools::install_github("caravagnalab/rRACES")
